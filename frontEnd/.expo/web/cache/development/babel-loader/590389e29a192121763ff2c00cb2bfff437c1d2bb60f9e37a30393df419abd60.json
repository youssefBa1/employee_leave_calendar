{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { TransitionPresets } from \"@react-navigation/stack\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport MyLeavesScreen from \"./screens/MyLeavesScreen.js\";\nimport PlannerScreen from \"./screens/PlannerScreen.js\";\nimport SettingsScreen from \"./screens/SettingsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar myLeaves = \"myleaves\";\nvar planner = \"planner\";\nvar settingsName = \"Settings\";\nvar Tab = createBottomTabNavigator();\nfunction MainContainer() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: myLeaves,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n            if (rn === myLeaves) {\n              iconName = focused ? \"cafe-outline\" : \"cafe-outline\";\n            } else if (rn === planner) {\n              iconName = focused ? \"calendar\" : \"calendar\";\n            } else if (rn === settingsName) {\n              iconName = focused ? \"settings\" : \"settings-outline\";\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"#3ea2ee\",\n          tabBarInactiveTintColor: \"grey\",\n          tabBarLabelStyle: {\n            paddingBottom: 10,\n            fontSize: 10\n          },\n          tabBarStyle: {\n            padding: 10,\n            height: 70\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: myLeaves,\n        component: MyLeavesScreen\n      }), _jsx(Tab.Screen, {\n        name: planner,\n        component: PlannerScreen\n      }), _jsx(Tab.Screen, {\n        name: settingsName,\n        component: SettingsScreen\n      })]\n    })\n  });\n}\nexport default MainContainer;","map":{"version":3,"names":["NavigationContainer","createBottomTabNavigator","TransitionPresets","Button","Ionicons","MyLeavesScreen","PlannerScreen","SettingsScreen","jsx","_jsx","jsxs","_jsxs","myLeaves","planner","settingsName","Tab","MainContainer","children","Navigator","initialRouteName","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","rn","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","paddingBottom","fontSize","tabBarStyle","padding","height","Screen","component"],"sources":["C:/Users/PC/Documents/interShip/frontEnd/navigation/mainContainer.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { TransitionPresets } from \"@react-navigation/stack\";\r\nimport { Button } from \"react-native\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\n\r\n// Screens\r\nimport MyLeavesScreen from \"./screens/MyLeavesScreen.js\";\r\nimport PlannerScreen from \"./screens/PlannerScreen.js\";\r\nimport SettingsScreen from \"./screens/SettingsScreen\";\r\n\r\n// Screen names\r\nconst myLeaves = \"myleaves\";\r\nconst planner = \"planner\";\r\nconst settingsName = \"Settings\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MainContainer() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        initialRouteName={myLeaves}\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            let rn = route.name;\r\n\r\n            if (rn === myLeaves) {\r\n              iconName = focused ? \"cafe-outline\" : \"cafe-outline\";\r\n            } else if (rn === planner) {\r\n              iconName = focused ? \"calendar\" : \"calendar\";\r\n            } else if (rn === settingsName) {\r\n              iconName = focused ? \"settings\" : \"settings-outline\";\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: \"#3ea2ee\",\r\n          tabBarInactiveTintColor: \"grey\",\r\n          tabBarLabelStyle: { paddingBottom: 10, fontSize: 10 },\r\n          tabBarStyle: { padding: 10, height: 70 },\r\n        })}\r\n      >\r\n        <Tab.Screen name={myLeaves} component={MyLeavesScreen} />\r\n        <Tab.Screen name={planner} component={PlannerScreen} />\r\n        <Tab.Screen name={settingsName} component={SettingsScreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default MainContainer;\r\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,iBAAiB,QAAQ,yBAAyB;AAAC,OAAAC,MAAA;AAE5D,OAAOC,QAAQ;AAGf,OAAOC,cAAc;AACrB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtD,IAAMC,QAAQ,GAAG,UAAU;AAC3B,IAAMC,OAAO,GAAG,SAAS;AACzB,IAAMC,YAAY,GAAG,UAAU;AAE/B,IAAMC,GAAG,GAAGd,wBAAwB,CAAC,CAAC;AAEtC,SAASe,aAAaA,CAAA,EAAG;EACvB,OACEP,IAAA,CAACT,mBAAmB;IAAAiB,QAAA,EAClBN,KAAA,CAACI,GAAG,CAACG,SAAS;MACZC,gBAAgB,EAAEP,QAAS;MAC3BQ,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;YAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;cAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;YACjC,IAAIC,QAAQ;YACZ,IAAIC,EAAE,GAAGP,KAAK,CAACQ,IAAI;YAEnB,IAAID,EAAE,KAAKjB,QAAQ,EAAE;cACnBgB,QAAQ,GAAGH,OAAO,GAAG,cAAc,GAAG,cAAc;YACtD,CAAC,MAAM,IAAII,EAAE,KAAKhB,OAAO,EAAE;cACzBe,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,UAAU;YAC9C,CAAC,MAAM,IAAII,EAAE,KAAKf,YAAY,EAAE;cAC9Bc,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;YACtD;YAGA,OAAOhB,IAAA,CAACL,QAAQ;cAAC0B,IAAI,EAAEF,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC/D,CAAC;UACDK,qBAAqB,EAAE,SAAS;UAChCC,uBAAuB,EAAE,MAAM;UAC/BC,gBAAgB,EAAE;YAAEC,aAAa,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAG,CAAC;UACrDC,WAAW,EAAE;YAAEC,OAAO,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAG;QACzC,CAAC;MAAA,CAAE;MAAArB,QAAA,GAEHR,IAAA,CAACM,GAAG,CAACwB,MAAM;QAACT,IAAI,EAAElB,QAAS;QAAC4B,SAAS,EAAEnC;MAAe,CAAE,CAAC,EACzDI,IAAA,CAACM,GAAG,CAACwB,MAAM;QAACT,IAAI,EAAEjB,OAAQ;QAAC2B,SAAS,EAAElC;MAAc,CAAE,CAAC,EACvDG,IAAA,CAACM,GAAG,CAACwB,MAAM;QAACT,IAAI,EAAEhB,YAAa;QAAC0B,SAAS,EAAEjC;MAAe,CAAE,CAAC;IAAA,CAChD;EAAC,CACG,CAAC;AAE1B;AAEA,eAAeS,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}