{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"renderButton\", \"style\", \"color\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useTheme } from '@react-navigation/native';\nimport { PlatformPressable } from '@react-navigation/elements';\nexport function HeaderButton(props) {\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var themeColor = Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  var renderButton = props.renderButton,\n    style = props.style,\n    color = props.color,\n    other = _objectWithoutProperties(props, _excluded);\n  var ButtonElement = renderButton(_objectSpread({\n    color: color || themeColor\n  }, other));\n  return React.createElement(PlatformPressable, _extends({\n    hitSlop: buttonHitSlop,\n    style: StyleSheet.compose(styles.buttonContainer, style),\n    android_ripple: rippleConfig\n  }, other), ButtonElement);\n}\nexport function defaultRenderVisibleButton(visibleButtonProps) {\n  var IconComponent = visibleButtonProps.IconComponent,\n    iconSize = visibleButtonProps.iconSize,\n    color = visibleButtonProps.color,\n    iconName = visibleButtonProps.iconName,\n    title = visibleButtonProps.title,\n    buttonStyle = visibleButtonProps.buttonStyle;\n  return IconComponent && iconName ? React.createElement(IconComponent, {\n    name: iconName,\n    color: color,\n    size: iconSize,\n    style: buttonStyle\n  }) : React.createElement(Text, {\n    style: [styles.text, {\n      color: color\n    }, buttonStyle]\n  }, title);\n}\nvar styles = StyleSheet.create({\n  text: _objectSpread({}, Platform.select({\n    android: {\n      fontFamily: 'sans-serif-medium',\n      fontSize: 14,\n      textTransform: 'uppercase'\n    },\n    default: {\n      fontSize: 17,\n      textTransform: 'capitalize'\n    }\n  })),\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nvar rippleConfig = {\n  foreground: true,\n  borderless: true,\n  radius: 20\n};\nvar buttonHitSlop = {\n  top: 5,\n  bottom: 5,\n  left: 5,\n  right: 5\n};","map":{"version":3,"names":["React","StyleSheet","Platform","Text","useTheme","PlatformPressable","HeaderButton","props","_useTheme","colors","themeColor","select","ios","primary","default","text","renderButton","style","color","other","_objectWithoutProperties","_excluded","ButtonElement","_objectSpread","createElement","_extends","hitSlop","buttonHitSlop","compose","styles","buttonContainer","android_ripple","rippleConfig","defaultRenderVisibleButton","visibleButtonProps","IconComponent","iconSize","iconName","title","buttonStyle","name","size","create","android","fontFamily","fontSize","textTransform","alignItems","justifyContent","foreground","borderless","radius","top","bottom","left","right"],"sources":["C:\\Users\\PC\\Documents\\interShip\\frontEnd\\node_modules\\react-navigation-header-buttons\\src\\HeaderButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  Platform,\n  ColorValue,\n  Text,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { useTheme } from '@react-navigation/native';\nimport { PlatformPressable } from '@react-navigation/elements';\nimport type { ComponentProps, ReactNode } from 'react';\n\n// for renderVisibleButton() function\nexport type VisibleButtonProps = {\n  title: string;\n\n  IconComponent?: React.ComponentType<{\n    name: any; // TODO generify to support icon names\n    style?: any;\n    color?: ColorValue;\n    size?: number;\n  }>;\n  iconName?: string;\n  iconSize?: number;\n  color?: ColorValue;\n  buttonStyle?: ViewStyle | TextStyle;\n};\n\ntype PlatformPressableProps = ComponentProps<typeof PlatformPressable>;\n\ntype RenderButtonType = {\n  renderButton: <T extends VisibleButtonProps>(params: T) => ReactNode;\n};\n\ntype BaseProps = Omit<PlatformPressableProps, 'children'> & VisibleButtonProps;\n\n// for <Item />, some things are optional while they are required for HeaderButton\nexport type ItemProps = BaseProps & Partial<RenderButtonType>;\n\nexport type HeaderButtonProps = BaseProps & RenderButtonType;\n\nexport function HeaderButton(props: HeaderButtonProps) {\n  const { colors } = useTheme();\n  const themeColor = Platform.select({\n    ios: colors.primary,\n    default: colors.text,\n  });\n\n  const { renderButton, style, color, ...other } = props;\n\n  const ButtonElement = renderButton({\n    color: color || themeColor,\n    ...other,\n  });\n\n  return (\n    <PlatformPressable\n      hitSlop={buttonHitSlop}\n      // @ts-expect-error typings too strict\n      style={StyleSheet.compose(styles.buttonContainer, style)}\n      android_ripple={rippleConfig}\n      {...other}\n    >\n      {ButtonElement}\n    </PlatformPressable>\n  );\n}\n\nexport function defaultRenderVisibleButton(\n  visibleButtonProps: VisibleButtonProps\n): React.ReactElement {\n  const { IconComponent, iconSize, color, iconName, title, buttonStyle } =\n    visibleButtonProps;\n\n  return IconComponent && iconName ? (\n    <IconComponent\n      name={iconName}\n      color={color}\n      size={iconSize}\n      style={buttonStyle}\n    />\n  ) : (\n    <Text style={[styles.text, { color }, buttonStyle]}>{title}</Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    ...Platform.select({\n      android: {\n        fontFamily: 'sans-serif-medium',\n        fontSize: 14,\n        textTransform: 'uppercase',\n      },\n      default: {\n        fontSize: 17,\n        textTransform: 'capitalize',\n      },\n    }),\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst rippleConfig = {\n  foreground: true,\n  borderless: true,\n  radius: 20,\n};\n\nconst buttonHitSlop = { top: 5, bottom: 5, left: 5, right: 5 };\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAS9B,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,iBAAiB,QAAQ,4BAA4B;AAgC9D,OAAO,SAASC,YAAYA,CAACC,KAAwB,EAAE;EACrD,IAAAC,SAAA,GAAmBJ,QAAQ,CAAC,CAAC;IAArBK,MAAA,GAAAD,SAAA,CAAAC,MAAA;EACR,IAAMC,UAAU,GAAGR,QAAQ,CAACS,MAAM,CAAC;IACjCC,GAAG,EAAEH,MAAM,CAACI,OAAO;IACnBC,OAAO,EAAEL,MAAM,CAACM;EAClB,CAAC,CAAC;EAEF,IAAQC,YAAY,GAA6BT,KAAK,CAA9CS,YAAY;IAAEC,KAAK,GAAsBV,KAAK,CAAhCU,KAAK;IAAEC,KAAK,GAAeX,KAAK,CAAzBW,KAAK;IAAKC,KAAA,GAAAC,wBAAA,CAAUb,KAAK,EAAAc,SAAA;EAEtD,IAAMC,aAAa,GAAGN,YAAY,CAAAO,aAAA;IAChCL,KAAK,EAAEA,KAAK,IAAIR;EAAU,GACvBS,KAAA,CACJ,CAAC;EAEF,OACEnB,KAAA,CAAAwB,aAAA,CAACnB,iBAAiB,EAAAoB,QAAA;IAChBC,OAAO,EAAEC,aAAA;IAETV,KAAK,EAAEhB,UAAU,CAAC2B,OAAO,CAACC,MAAM,CAACC,eAAe,EAAEb,KAAK,CAAE;IACzDc,cAAc,EAAEC;EAAa,GACzBb,KAAK,GAERG,aACgB,CAAC;AAExB;AAEA,OAAO,SAASW,0BAA0BA,CACxCC,kBAAsC,EAClB;EACpB,IAAQC,aAAa,GACnBD,kBAAkB,CADZC,aAAa;IAAEC,QAAQ,GAC7BF,kBAAkB,CADGE,QAAQ;IAAElB,KAAK,GACpCgB,kBAAkB,CADahB,KAAK;IAAEmB,QAAQ,GAC9CH,kBAAkB,CADoBG,QAAQ;IAAEC,KAAK,GACrDJ,kBAAkB,CAD8BI,KAAK;IAAEC,WAAA,GACvDL,kBAAkB,CADqCK,WAAA;EAGzD,OAAOJ,aAAa,IAAIE,QAAQ,GAC9BrC,KAAA,CAAAwB,aAAA,CAACW,aAAa;IACZK,IAAI,EAAEH,QAAS;IACfnB,KAAK,EAAEA,KAAM;IACbuB,IAAI,EAAEL,QAAS;IACfnB,KAAK,EAAEsB;EAAY,CACpB,CAAC,GAEFvC,KAAA,CAAAwB,aAAA,CAACrB,IAAI;IAACc,KAAK,EAAE,CAACY,MAAM,CAACd,IAAI,EAAE;MAAEG,KAAA,EAAAA;IAAM,CAAC,EAAEqB,WAAW;EAAE,GAAED,KAAY,CAClE;AACH;AAEA,IAAMT,MAAM,GAAG5B,UAAU,CAACyC,MAAM,CAAC;EAC/B3B,IAAI,EAAAQ,aAAA,KACCrB,QAAQ,CAACS,MAAM,CAAC;IACjBgC,OAAO,EAAE;MACPC,UAAU,EAAE,mBAAmB;MAC/BC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE;IACjB,CAAC;IACDhC,OAAO,EAAE;MACP+B,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE;IACjB;EACF,CAAC,EACF;EACDhB,eAAe,EAAE;IACfiB,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,IAAMhB,YAAY,GAAG;EACnBiB,UAAU,EAAE,IAAI;EAChBC,UAAU,EAAE,IAAI;EAChBC,MAAM,EAAE;AACV,CAAC;AAED,IAAMxB,aAAa,GAAG;EAAEyB,GAAG,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,IAAI,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}