{"ast":null,"code":"import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport MyLeavesScreen from \"./screens/MyLeavesScreen.js\";\nimport PlannerScreen from \"./screens/PlannerScreen.js\";\nimport SettingsScreen from \"./screens/SettingsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar myLeaves = \"myleaves\";\nvar planner = \"planner\";\nvar settingsName = \"Settings\";\nvar Tab = createBottomTabNavigator();\nfunction MainContainer(_ref) {\n  var handleLogout = _ref.handleLogout;\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: myLeaves,\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n            color = _ref3.color,\n            size = _ref3.size;\n          var iconName;\n          var rn = route.name;\n          if (rn === myLeaves) {\n            iconName = focused ? \"cafe-outline\" : \"cafe-outline\";\n          } else if (rn === planner) {\n            iconName = focused ? \"calendar\" : \"calendar\";\n          } else if (rn === settingsName) {\n            iconName = focused ? \"settings\" : \"settings-outline\";\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#3ea2ee\",\n        tabBarInactiveTintColor: \"grey\",\n        tabBarLabelStyle: {\n          paddingBottom: 10,\n          fontSize: 10\n        },\n        tabBarStyle: {\n          padding: 10,\n          height: 70\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: myLeaves,\n      component: MyLeavesScreen\n    }), _jsx(Tab.Screen, {\n      name: planner,\n      component: PlannerScreen\n    }), _jsx(Tab.Screen, {\n      name: settingsName,\n      options: {\n        headerShown: true\n      },\n      component: function component() {\n        return _jsx(SettingsScreen, {\n          handleLogout: handleLogout,\n          navigation: navigator\n        });\n      }\n    })]\n  });\n}\nexport default MainContainer;","map":{"version":3,"names":["React","createBottomTabNavigator","Ionicons","MyLeavesScreen","PlannerScreen","SettingsScreen","jsx","_jsx","jsxs","_jsxs","myLeaves","planner","settingsName","Tab","MainContainer","_ref","handleLogout","Navigator","initialRouteName","screenOptions","_ref2","route","tabBarIcon","_ref3","focused","color","size","iconName","rn","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","paddingBottom","fontSize","tabBarStyle","padding","height","children","Screen","component","options","headerShown","navigation","navigator"],"sources":["C:/Users/PC/Documents/interShip/frontEnd/navigation/mainContainer.js"],"sourcesContent":["import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\n\r\n// Screens\r\nimport MyLeavesScreen from \"./screens/MyLeavesScreen.js\";\r\nimport PlannerScreen from \"./screens/PlannerScreen.js\";\r\nimport SettingsScreen from \"./screens/SettingsScreen\";\r\n\r\n// Screen names\r\nconst myLeaves = \"myleaves\";\r\nconst planner = \"planner\";\r\nconst settingsName = \"Settings\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MainContainer({ handleLogout }) {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName={myLeaves}\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n          let rn = route.name;\r\n\r\n          if (rn === myLeaves) {\r\n            iconName = focused ? \"cafe-outline\" : \"cafe-outline\";\r\n          } else if (rn === planner) {\r\n            iconName = focused ? \"calendar\" : \"calendar\";\r\n          } else if (rn === settingsName) {\r\n            iconName = focused ? \"settings\" : \"settings-outline\";\r\n          }\r\n\r\n          // You can return any component that you like here!\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: \"#3ea2ee\",\r\n        tabBarInactiveTintColor: \"grey\",\r\n        tabBarLabelStyle: { paddingBottom: 10, fontSize: 10 },\r\n        tabBarStyle: { padding: 10, height: 70 },\r\n      })}\r\n    >\r\n      <Tab.Screen name={myLeaves} component={MyLeavesScreen} />\r\n      <Tab.Screen name={planner} component={PlannerScreen} />\r\n      <Tab.Screen\r\n        name={settingsName}\r\n        options={{ headerShown: true }}\r\n        component={() => (\r\n          <SettingsScreen handleLogout={handleLogout} navigation={navigator} />\r\n        )}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default MainContainer;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,QAAQ;AAGf,OAAOC,cAAc;AACrB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtD,IAAMC,QAAQ,GAAG,UAAU;AAC3B,IAAMC,OAAO,GAAG,SAAS;AACzB,IAAMC,YAAY,GAAG,UAAU;AAE/B,IAAMC,GAAG,GAAGZ,wBAAwB,CAAC,CAAC;AAEtC,SAASa,aAAaA,CAAAC,IAAA,EAAmB;EAAA,IAAhBC,YAAY,GAAAD,IAAA,CAAZC,YAAY;EACnC,OACEP,KAAA,CAACI,GAAG,CAACI,SAAS;IACZC,gBAAgB,EAAER,QAAS;IAC3BS,aAAa,EAAE,SAAAA,cAAAC,KAAA;MAAA,IAAGC,KAAK,GAAAD,KAAA,CAALC,KAAK;MAAA,OAAQ;QAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;UAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UACjC,IAAIC,QAAQ;UACZ,IAAIC,EAAE,GAAGP,KAAK,CAACQ,IAAI;UAEnB,IAAID,EAAE,KAAKlB,QAAQ,EAAE;YACnBiB,QAAQ,GAAGH,OAAO,GAAG,cAAc,GAAG,cAAc;UACtD,CAAC,MAAM,IAAII,EAAE,KAAKjB,OAAO,EAAE;YACzBgB,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,UAAU;UAC9C,CAAC,MAAM,IAAII,EAAE,KAAKhB,YAAY,EAAE;YAC9Be,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;UACtD;UAGA,OAAOjB,IAAA,CAACL,QAAQ;YAAC2B,IAAI,EAAEF,QAAS;YAACD,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAC/D,CAAC;QACDK,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BC,gBAAgB,EAAE;UAAEC,aAAa,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAC;QACrDC,WAAW,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG;MACzC,CAAC;IAAA,CAAE;IAAAC,QAAA,GAEH/B,IAAA,CAACM,GAAG,CAAC0B,MAAM;MAACV,IAAI,EAAEnB,QAAS;MAAC8B,SAAS,EAAErC;IAAe,CAAE,CAAC,EACzDI,IAAA,CAACM,GAAG,CAAC0B,MAAM;MAACV,IAAI,EAAElB,OAAQ;MAAC6B,SAAS,EAAEpC;IAAc,CAAE,CAAC,EACvDG,IAAA,CAACM,GAAG,CAAC0B,MAAM;MACTV,IAAI,EAAEjB,YAAa;MACnB6B,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAK,CAAE;MAC/BF,SAAS,EAAE,SAAAA,UAAA;QAAA,OACTjC,IAAA,CAACF,cAAc;UAACW,YAAY,EAAEA,YAAa;UAAC2B,UAAU,EAAEC;QAAU,CAAE,CAAC;MAAA;IACrE,CACH,CAAC;EAAA,CACW,CAAC;AAEpB;AAEA,eAAe9B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}