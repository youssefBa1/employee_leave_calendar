{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { useTheme } from '@react-navigation/native';\nexport function MenuItem(props) {\n  var icon = props.icon,\n    title = props.title,\n    disabled = props.disabled,\n    onPress = props.onPress,\n    style = props.style,\n    titleStyle = props.titleStyle,\n    testID = props.testID;\n  var _useTheme = useTheme(),\n    dark = _useTheme.dark,\n    text = _useTheme.colors.text;\n  var disabledColor = dark ? styles.darkDisabled : styles.lightDisabled;\n  var titleColor = disabled ? disabledColor : {\n    color: text\n  };\n  var themePressColorAndroid = dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n  return React.createElement(PlatformPressable, {\n    style: [styles.container, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    pressColor: themePressColorAndroid\n  }, React.createElement(View, {\n    style: styles.row\n  }, React.isValidElement(icon) && React.createElement(View, {\n    style: [styles.item, styles.icon],\n    pointerEvents: \"box-none\"\n  }, icon), React.createElement(View, {\n    style: [styles.item, styles.content, icon != null ? styles.widthWithIcon : undefined],\n    pointerEvents: \"none\"\n  }, React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.title, titleColor, titleStyle]\n  }, title))));\n}\nvar minWidth = 112;\nvar maxWidth = 280;\nvar iconWidth = 25;\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth: minWidth,\n    maxWidth: maxWidth,\n    height: 48,\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  icon: {\n    width: iconWidth\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48)\n  },\n  lightDisabled: {\n    color: 'rgba(0, 0, 0, 0.32)'\n  },\n  darkDisabled: {\n    color: 'rgba(255, 255, 255, 0.32)'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","View","PlatformPressable","useTheme","MenuItem","props","icon","title","disabled","onPress","style","titleStyle","testID","_useTheme","dark","text","colors","disabledColor","styles","darkDisabled","lightDisabled","titleColor","color","themePressColorAndroid","createElement","container","pressColor","row","isValidElement","item","pointerEvents","content","widthWithIcon","undefined","selectable","numberOfLines","minWidth","maxWidth","iconWidth","create","paddingHorizontal","height","justifyContent","flexDirection","width","fontSize","marginHorizontal"],"sources":["C:\\Users\\PC\\Documents\\interShip\\frontEnd\\node_modules\\react-navigation-header-buttons\\src\\overflowMenu\\vendor\\MenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleSheet,\n  Text,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { PlatformPressable } from '@react-navigation/elements';\n\nimport { useTheme } from '@react-navigation/native';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: string;\n  /**\n   * Icon to display for the `MenuItem`.\n   */\n  icon?: React.ReactNode | undefined;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: null | ((params?: GestureResponderEvent) => void) | undefined;\n  /**\n   * @optional\n   */\n  style?: ViewStyle;\n  titleStyle?: ViewStyle;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n */\nexport function MenuItem(props: Props) {\n  const { icon, title, disabled, onPress, style, titleStyle, testID } = props;\n\n  const {\n    dark,\n    colors: { text },\n  } = useTheme();\n\n  const disabledColor = dark ? styles.darkDisabled : styles.lightDisabled;\n  const titleColor = disabled ? disabledColor : { color: text };\n  const themePressColorAndroid = dark\n    ? 'rgba(255, 255, 255, .32)'\n    : 'rgba(0, 0, 0, .32)';\n\n  return (\n    <PlatformPressable\n      style={[styles.container, style]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      pressColor={themePressColorAndroid}\n    >\n      <View style={styles.row}>\n        {React.isValidElement(icon) && (\n          <View style={[styles.item, styles.icon]} pointerEvents=\"box-none\">\n            {icon}\n          </View>\n        )}\n        <View\n          style={[\n            styles.item,\n            styles.content,\n            icon != null ? styles.widthWithIcon : undefined,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            selectable={false}\n            numberOfLines={1}\n            style={[styles.title, titleColor, titleStyle]}\n          >\n            {title}\n          </Text>\n        </View>\n      </View>\n    </PlatformPressable>\n  );\n}\n\nconst minWidth = 112;\nconst maxWidth = 280;\nconst iconWidth = 25;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth,\n    maxWidth,\n    height: 48,\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  icon: {\n    width: iconWidth,\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16,\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48),\n  },\n  lightDisabled: {\n    color: 'rgba(0, 0, 0, 0.32)',\n  },\n  darkDisabled: {\n    color: 'rgba(255, 255, 255, 0.32)',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}