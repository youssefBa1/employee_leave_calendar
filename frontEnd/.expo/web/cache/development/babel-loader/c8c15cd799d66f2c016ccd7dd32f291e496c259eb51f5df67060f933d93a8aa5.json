{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Options = function Options(_ref) {\n  var name = _ref.name,\n    iconName = _ref.iconName,\n    onPressOption = _ref.onPressOption;\n  var TouchableComponent = Platform.OS === \"android\" ? TouchableNativeFeedback : TouchableOpacity;\n  return _jsx(TouchableComponent, {\n    onPress: onPressOption,\n    children: _jsxs(View, {\n      style: styles.optionContainer,\n      children: [_jsx(Ionicons, {\n        name: iconName,\n        size: 28,\n        color: \"#000\",\n        style: styles.icon\n      }), _jsx(Text, {\n        style: styles.optionText,\n        children: name\n      })]\n    })\n  });\n};\nexport default Options;\nvar styles = StyleSheet.create({\n  optionContainer: {\n    flexDirection: \"row\",\n    backgroundColor: \"#f5f5f5\",\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    marginVertical: 10,\n    marginHorizontal: 10,\n    borderRadius: 10,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  icon: {\n    marginRight: 40\n  },\n  optionText: {\n    fontSize: 18,\n    fontFamily: \"Arial\",\n    color: \"#000\",\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Pressable","Text","View","Ionicons","TouchableNativeFeedback","TouchableOpacity","Platform","jsx","_jsx","jsxs","_jsxs","Options","_ref","name","iconName","onPressOption","TouchableComponent","OS","onPress","children","style","styles","optionContainer","size","color","icon","optionText","create","flexDirection","backgroundColor","paddingVertical","paddingHorizontal","marginVertical","marginHorizontal","borderRadius","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginRight","fontSize","fontFamily","flex"],"sources":["C:/Users/PC/Documents/interShip/frontEnd/components/settings/Option.js"],"sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Pressable, Text, View } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport {\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  Platform,\r\n} from \"react-native\";\r\n\r\nconst Options = ({ name, iconName, onPressOption }) => {\r\n  const TouchableComponent =\r\n    Platform.OS === \"android\" ? TouchableNativeFeedback : TouchableOpacity;\r\n\r\n  return (\r\n    <TouchableComponent onPress={onPressOption}>\r\n      <View style={styles.optionContainer}>\r\n        <Ionicons name={iconName} size={28} color=\"#000\" style={styles.icon} />\r\n        <Text style={styles.optionText}>{name}</Text>\r\n      </View>\r\n    </TouchableComponent>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n\r\nconst styles = StyleSheet.create({\r\n  optionContainer: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#f5f5f5\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 20,\r\n    marginVertical: 10,\r\n    marginHorizontal: 10, // Add margin to the left and right edges\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  icon: {\r\n    marginRight: 40, // Adjust the margin to make the icon closer to the text\r\n  },\r\n  optionText: {\r\n    fontSize: 18,\r\n    fontFamily: \"Arial\",\r\n    color: \"#000\",\r\n    flex: 1, // To center the text within the Pressable\r\n  },\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,OAAAC,uBAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO9C,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA,EAA0C;EAAA,IAApCC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,aAAa,GAAAH,IAAA,CAAbG,aAAa;EAC9C,IAAMC,kBAAkB,GACtBV,QAAQ,CAACW,EAAE,KAAK,SAAS,GAAGb,uBAAuB,GAAGC,gBAAgB;EAExE,OACEG,IAAA,CAACQ,kBAAkB;IAACE,OAAO,EAAEH,aAAc;IAAAI,QAAA,EACzCT,KAAA,CAACR,IAAI;MAACkB,KAAK,EAAEC,MAAM,CAACC,eAAgB;MAAAH,QAAA,GAClCX,IAAA,CAACL,QAAQ;QAACU,IAAI,EAAEC,QAAS;QAACS,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC,MAAM;QAACJ,KAAK,EAAEC,MAAM,CAACI;MAAK,CAAE,CAAC,EACvEjB,IAAA,CAACP,IAAI;QAACmB,KAAK,EAAEC,MAAM,CAACK,UAAW;QAAAP,QAAA,EAAEN;MAAI,CAAO,CAAC;IAAA,CACzC;EAAC,CACW,CAAC;AAEzB,CAAC;AAED,eAAeF,OAAO;AAEtB,IAAMU,MAAM,GAAGtB,UAAU,CAAC4B,MAAM,CAAC;EAC/BL,eAAe,EAAE;IACfM,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE,SAAS;IAC1BC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,cAAc,EAAE,EAAE;IAClBC,gBAAgB,EAAE,EAAE;IACpBC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,QAAQ;IACpBC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MACZC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC;IACDC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACb,CAAC;EACDjB,IAAI,EAAE;IACJkB,WAAW,EAAE;EACf,CAAC;EACDjB,UAAU,EAAE;IACVkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,OAAO;IACnBrB,KAAK,EAAE,MAAM;IACbsB,IAAI,EAAE;EACR;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}