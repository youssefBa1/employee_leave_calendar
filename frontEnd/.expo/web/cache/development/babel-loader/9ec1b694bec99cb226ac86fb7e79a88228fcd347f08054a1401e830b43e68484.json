{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainContainer from \"./navigation/mainContainer\";\nimport LoginForm from \"./auth/login.js\";\nimport RegisterForm from \"./auth/register\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nLogBox.ignoreAllLogs();\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSignedIn = _useState2[0],\n    setIsSignedIn = _useState2[1];\n  var handleLogin = function handleLogin() {\n    setIsSignedIn(true);\n  };\n  var handleLogout = function handleLogout() {\n    setIsSignedIn(false);\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: isSignedIn ? _jsx(Stack.Screen, {\n        name: \"main\",\n        component: function component() {\n          return _jsx(MainContainer, {\n            handleLogout: handleLogout\n          });\n        },\n        options: {\n          headerShown: false\n        }\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"LogIn\",\n          component: function component(_ref) {\n            var navigation = _ref.navigation;\n            return _jsx(LoginForm, {\n              handleLogin: handleLogin,\n              setIsSignedIn: setIsSignedIn,\n              navigation: navigation\n            });\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"register\",\n          component: RegisterForm\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","createStackNavigator","NavigationContainer","MainContainer","LoginForm","RegisterForm","LogBox","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ignoreAllLogs","Stack","App","_useState","_useState2","_slicedToArray","isSignedIn","setIsSignedIn","handleLogin","handleLogout","children","Navigator","Screen","name","component","options","headerShown","_ref","navigation"],"sources":["C:/Users/PC/Documents/interShip/frontEnd/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nimport MainContainer from \"./navigation/mainContainer\";\nimport LoginForm from \"./auth/login.js\";\nimport RegisterForm from \"./auth/register\";\nimport { LogBox } from \"react-native\";\nLogBox.ignoreAllLogs();\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  const handleLogin = () => {\n    setIsSignedIn(true); // Set isSignedIn to true after successful login\n  };\n\n  const handleLogout = () => {\n    setIsSignedIn(false); // Set isSignedIn to false upon logout\n  };\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        {isSignedIn ? (\n          <Stack.Screen\n            name=\"main\"\n            component={() => <MainContainer handleLogout={handleLogout} />}\n            options={{ headerShown: false }}\n          />\n        ) : (\n          <>\n            <Stack.Screen\n              name=\"LogIn\"\n              component={({ navigation }) => (\n                <LoginForm\n                  handleLogin={handleLogin}\n                  setIsSignedIn={setIsSignedIn}\n                  navigation={navigation} // Pass the navigation prop to the LoginForm component\n                />\n              )}\n            />\n            <Stack.Screen name=\"register\" component={RegisterForm} />\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,OAAOC,aAAa;AACpB,OAAOC,SAAS;AAChB,OAAOC,YAAY;AAAwB,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3CN,MAAM,CAACO,aAAa,CAAC,CAAC;AAEtB,IAAMC,KAAK,GAAGb,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASc,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAoChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBF,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,OACEZ,IAAA,CAACN,mBAAmB;IAAAqB,QAAA,EAClBf,IAAA,CAACM,KAAK,CAACU,SAAS;MAAAD,QAAA,EACbJ,UAAU,GACTX,IAAA,CAACM,KAAK,CAACW,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAE,SAAAA,UAAA;UAAA,OAAMnB,IAAA,CAACL,aAAa;YAACmB,YAAY,EAAEA;UAAa,CAAE,CAAC;QAAA,CAAC;QAC/DM,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACjC,CAAC,GAEFjB,KAAA,CAAAF,SAAA;QAAAa,QAAA,GACEf,IAAA,CAACM,KAAK,CAACW,MAAM;UACXC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAE,SAAAA,UAAAG,IAAA;YAAA,IAAGC,UAAU,GAAAD,IAAA,CAAVC,UAAU;YAAA,OACtBvB,IAAA,CAACJ,SAAS;cACRiB,WAAW,EAAEA,WAAY;cACzBD,aAAa,EAAEA,aAAc;cAC7BW,UAAU,EAAEA;YAAW,CACxB,CAAC;UAAA;QACF,CACH,CAAC,EACFvB,IAAA,CAACM,KAAK,CAACW,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,SAAS,EAAEtB;QAAa,CAAE,CAAC;MAAA,CACzD;IACH,CACc;EAAC,CACC,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}