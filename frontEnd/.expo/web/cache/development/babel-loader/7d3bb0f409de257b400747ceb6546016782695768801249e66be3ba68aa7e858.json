{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"inset\", \"style\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTheme } from '@react-navigation/native';\nexport function Divider(props) {\n  var _useTheme = useTheme(),\n    dark = _useTheme.dark;\n  var inset = props.inset,\n    style = props.style,\n    rest = _objectWithoutProperties(props, _excluded);\n  var textStyle = dark ? styles.dark : styles.light;\n  return React.createElement(View, _extends({}, rest, {\n    style: [textStyle, inset && styles.inset, style]\n  }));\n}\nvar styles = StyleSheet.create({\n  light: {\n    backgroundColor: 'rgba(0, 0, 0, 0.12)',\n    height: StyleSheet.hairlineWidth\n  },\n  dark: {\n    backgroundColor: 'rgba(255, 255, 255, 0.12)',\n    height: StyleSheet.hairlineWidth\n  },\n  inset: {\n    marginLeft: 72\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","useTheme","Divider","props","_useTheme","dark","inset","style","rest","_objectWithoutProperties","_excluded","textStyle","styles","light","createElement","_extends","create","backgroundColor","height","hairlineWidth","marginLeft"],"sources":["C:\\Users\\PC\\Documents\\interShip\\frontEnd\\node_modules\\react-navigation-header-buttons\\src\\overflowMenu\\vendor\\Divider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n\ntype Props = ViewProps & {\n  inset?: boolean;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Apple</Text>\n *     <Divider />\n *     <Text>Orange</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * ```\n */\nexport function Divider(props: Props) {\n  const { dark } = useTheme();\n  const { inset, style, ...rest } = props;\n  const textStyle = dark ? styles.dark : styles.light;\n  return <View {...rest} style={[textStyle, inset && styles.inset, style]} />;\n}\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: 'rgba(0, 0, 0, 0.12)',\n    height: StyleSheet.hairlineWidth,\n  },\n  dark: {\n    backgroundColor: 'rgba(255, 255, 255, 0.12)',\n    height: StyleSheet.hairlineWidth,\n  },\n  inset: {\n    marginLeft: 72,\n  },\n});\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE9B,SAASC,QAAQ,QAAQ,0BAA0B;AA0BnD,OAAO,SAASC,OAAOA,CAACC,KAAY,EAAE;EACpC,IAAAC,SAAA,GAAiBH,QAAQ,CAAC,CAAC;IAAnBI,IAAA,GAAAD,SAAA,CAAAC,IAAA;EACR,IAAQC,KAAK,GAAqBH,KAAK,CAA/BG,KAAK;IAAEC,KAAK,GAAcJ,KAAK,CAAxBI,KAAK;IAAKC,IAAA,GAAAC,wBAAA,CAASN,KAAK,EAAAO,SAAA;EACvC,IAAMC,SAAS,GAAGN,IAAI,GAAGO,MAAM,CAACP,IAAI,GAAGO,MAAM,CAACC,KAAK;EACnD,OAAOf,KAAA,CAAAgB,aAAA,CAACd,IAAI,EAAAe,QAAA,KAAKP,IAAI;IAAED,KAAK,EAAE,CAACI,SAAS,EAAEL,KAAK,IAAIM,MAAM,CAACN,KAAK,EAAEC,KAAK;EAAE,EAAE,CAAC;AAC7E;AAEA,IAAMK,MAAM,GAAGb,UAAU,CAACiB,MAAM,CAAC;EAC/BH,KAAK,EAAE;IACLI,eAAe,EAAE,qBAAqB;IACtCC,MAAM,EAAEnB,UAAU,CAACoB;EACrB,CAAC;EACDd,IAAI,EAAE;IACJY,eAAe,EAAE,2BAA2B;IAC5CC,MAAM,EAAEnB,UAAU,CAACoB;EACrB,CAAC;EACDb,KAAK,EAAE;IACLc,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}